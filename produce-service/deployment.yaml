apiVersion: apps/v1
kind: Deployment
metadata:
  name:  produce-service
  labels:
    component: production
    tags.datadoghq.com/service: produce-service
    tags.datadoghq.com/env: pc-dev
    tags.datadoghq.com/version: "0.1.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: produce-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: produce-service
        component: production
        tags.datadoghq.com/service: produce-service
        tags.datadoghq.com/env: pc-dev
        tags.datadoghq.com/version: "0.1.2"
    spec:
      serviceAccountName: datadog-agent
      containers:
      - image: avinashupadhya99/produce-service:0.1.2
        name: produce
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "20m"
            memory: "55M"
          limits:
            cpu: "200m"
            memory: "500M"
        livenessProbe:
          httpGet:
            path: /_status/healthz
            port: 8080
          initialDelaySeconds: 240
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 8080
          initialDelaySeconds: 180
          timeoutSeconds: 10
        env:
        - name:  DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: production-database
              key: host
              optional: false
        - name:  DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: production-database
              key: name
              optional: false
        - name:  DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: production-database
              key: port
              optional: false
        - name:  DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: production-database
              key: user
              optional: false
        - name:  DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: production-database
              key: password
              optional: false
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_LOGS_INJECTION
          value: "true"
        ports:
        - containerPort:  8080
          name:  spring-boot
      - image: datadog/agent:7.33.0
        name: datadog-agent
        ports:
          - containerPort: 8125
            name: dogstatsdport
            protocol: UDP
          - containerPort: 8126
            name: traceport
            protocol: TCP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: datadog
              key: api-key
              optional: false
        - name: DD_SITE
          value: "datadoghq.com"
        - name: DD_EKS_FARGATE
          value: "true"
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_CLUSTER_NAME
          value: "commission-cluster"
        - name: DD_KUBERNETES_KUBELET_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      restartPolicy: Always
