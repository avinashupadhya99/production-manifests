apiVersion: apps/v1
kind: Deployment
metadata:
  name:  produce-service
  labels:
    name:  produce-service
    component: production
    env: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: produce-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: produce-service
        component: production
        env: dev
    spec:
      containers:
      - image: avinashupadhya99/produce-service:0.1.0
        name: produce
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "20m"
            memory: "55M"
        livenessProbe:
          httpGet:
            path: /_status/healthz
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
        env:
        - name:  DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: production-database
              key: host
              optional: false
        - name:  DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: production-database
              key: name
              optional: false
        - name:  DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: production-database
              key: port
              optional: false
        - name:  DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: production-database
              key: user
              optional: false
        - name:  DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: production-database
              key: password
              optional: false
        ports:
        - containerPort:  8080
          name:  spring-boot
      restartPolicy: Always
